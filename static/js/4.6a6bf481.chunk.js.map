{"version":3,"sources":["Components/Dialogs/Dialogs.module.css","Components/Dialogs/Message/Message.module.css","Components/Dialogs/DialogItem/DialogsItem.jsx","Components/Dialogs/Message/Message.jsx","Components/Dialogs/Dialogs.jsx","HOC/WithAuthRedirect.js","Components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","activeClassName","avatar","name","MessageItem","message","Dialogs","state","this","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","Message","isAuth","dialogsItems","AddMessageFormRedux","onSubmit","values","sendMessage","newMessageBody","React","Component","maxLength30","maxLengthCreator","reduxForm","form","handleSubmit","messageForm","Field","component","TextArea","validate","required","placeholder","mapStateToPropsForRedirect","auth","compose","connect","RedirectComponent"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,YAAc,+B,oBCAtLD,EAAOC,QAAU,CAAC,QAAU,2B,+HCkBbC,EAfI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OACI,yBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,QAC/B,6BACA,kBAAC,IAAD,CAASC,GAAIN,EAAMO,gBAAiBJ,IAAEE,QAAtC,KAAiDN,EAAMS,OAAvD,IAAgET,EAAMU,KAAtE,Q,kBCIGC,EARK,SAACX,GACjB,OACI,yBAAKG,UAAWC,IAAEQ,SAAUZ,EAAMY,U,wCCCpCC,E,uKAGQ,IAAD,OACDC,EAAQC,KAAKf,MAAMgB,YACnBC,EAAkBH,EAAMI,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYV,KAAMU,EAAEV,KAAMR,GAAIkB,EAAElB,GAAImB,IAAKD,EAAElB,GAC/BO,OAAQW,EAAEX,YAC/Da,EAAmBR,EAAMS,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAACC,EAAD,CAAab,QAASY,EAAEZ,QAASS,IAAKG,EAAEtB,QAMvF,OAAKa,KAAKf,MAAM0B,OAGZ,yBAAKvB,UAAWC,IAAEc,SACd,yBAAKf,UAAWC,IAAEuB,cACbV,GAEL,yBAAKd,UAAWC,IAAEmB,UACd,6BAAMD,IAEV,kBAACM,EAAD,CAAqBC,SAdT,SAACC,GACjB,EAAK9B,MAAM+B,YAAYD,EAAOE,oBAGH,kBAAC,IAAD,CAAUzB,GAAI,e,GAb/B0B,IAAMC,WA8BtBC,EAAcC,YAAiB,IAkB/BR,EAAsBS,YAAU,CAACC,KAAM,wBAAjBD,EAhBL,SAACrC,GAEpB,OACI,0BAAM6B,SAAU7B,EAAMuC,aAAcpC,UAAWC,IAAEoC,aAC7C,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IACXC,SAAU,CAACC,IAAUV,GACrBzB,KAAK,iBAAiBoC,YAAY,wBAE7C,6BACI,6CAQDjC,I,QCtDXkC,EAA6B,SAACjC,GAAD,MAAY,CACzCY,OAAQZ,EAAMkC,KAAKtB,S,OCORuB,sBACXC,aAPkB,SAACpC,GACnB,MAAO,CACHE,YAAaF,EAAME,eAKE,CAACe,mBDLE,SAACG,GAAe,IACtCiB,EADqC,uKAGnC,OAAKpC,KAAKf,MAAM0B,OAET,kBAACQ,EAAcnB,KAAKf,OAFI,kBAAC,IAAD,CAAUO,GAAI,eAHV,GACX0B,IAAMC,WAUtC,OAFqCgB,YAAQH,EAARG,CAAoCC,KCL9DF,CAGbpC","file":"static/js/4.6a6bf481.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__3-Pzz\",\"dialogsItems\":\"Dialogs_dialogsItems__7vaQE\",\"active\":\"Dialogs_active__Q7cjf\",\"messages\":\"Dialogs_messages__1-UEo\",\"messageForm\":\"Dialogs_messageForm__gKSPY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__HN4xy\"};","import React from \"react\";\r\nimport s from \"./../Dialogs.module.css\"\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog + ' ' + s.active}>\r\n            <div>\r\n            <NavLink to={path} activeClassName={s.active}>  {props.avatar} {props.name} </NavLink>\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default DialogItem;\r\n","import React from \"react\";\r\nimport s from \"./Message.module.css\"\r\n\r\n\r\n\r\n\r\nconst MessageItem = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default MessageItem;\r\n","import React from \"react\";\r\nimport s from \"./Dialogs.module.css\"\r\nimport DialogItem from \"./DialogItem/DialogsItem\";\r\nimport MessageItem from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../Common/FormsControls/FromsControls\";\r\nimport {maxLengthCreator, required} from \"../../Utils/Validators/validators\";\r\n\r\nclass Dialogs extends React.Component {\r\n\r\n\r\n    render() {\r\n        let state = this.props.dialogsPage;\r\n        let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} id={d.id} key={d.id}\r\n                                                                 avatar={d.avatar}/>);\r\n        let messagesElements = state.messages.map(m => <MessageItem message={m.message} key={m.id}/>);\r\n\r\n        let addNewMessage = (values) => {\r\n            this.props.sendMessage(values.newMessageBody);\r\n        };\r\n\r\n        if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n        return (\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {dialogsElements}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    <div>{messagesElements}</div>\r\n                </div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst maxLength30 = maxLengthCreator(30);\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.messageForm}>\r\n            <div>\r\n                <Field component={TextArea}\r\n                       validate={[required, maxLength30]}\r\n                       name=\"newMessageBody\" placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n};\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nexport default Dialogs;\r\n","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {sendMessage} from \"../../Redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../HOC/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n};\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {sendMessage}),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n"],"sourceRoot":""}